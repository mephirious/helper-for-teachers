// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: exam.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExamEventType int32

const (
	ExamEventType_EXAM_CREATED ExamEventType = 0
	ExamEventType_EXAM_UPDATED ExamEventType = 1
	ExamEventType_EXAM_DELETED ExamEventType = 2
)

// Enum value maps for ExamEventType.
var (
	ExamEventType_name = map[int32]string{
		0: "EXAM_CREATED",
		1: "EXAM_UPDATED",
		2: "EXAM_DELETED",
	}
	ExamEventType_value = map[string]int32{
		"EXAM_CREATED": 0,
		"EXAM_UPDATED": 1,
		"EXAM_DELETED": 2,
	}
)

func (x ExamEventType) Enum() *ExamEventType {
	p := new(ExamEventType)
	*p = x
	return p
}

func (x ExamEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExamEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_exam_proto_enumTypes[0].Descriptor()
}

func (ExamEventType) Type() protoreflect.EnumType {
	return &file_exam_proto_enumTypes[0]
}

func (x ExamEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExamEventType.Descriptor instead.
func (ExamEventType) EnumDescriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{0}
}

type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExamId        string                 `protobuf:"bytes,2,opt,name=exam_id,json=examId,proto3" json:"exam_id,omitempty"`
	TaskType      string                 `protobuf:"bytes,3,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Score         float32                `protobuf:"fixed32,5,opt,name=score,proto3" json:"score,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_exam_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

func (x *Task) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Task) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Task) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type Question struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExamId        string                 `protobuf:"bytes,2,opt,name=exam_id,json=examId,proto3" json:"exam_id,omitempty"`
	QuestionText  string                 `protobuf:"bytes,3,opt,name=question_text,json=questionText,proto3" json:"question_text,omitempty"`
	Options       []string               `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
	CorrectAnswer string                 `protobuf:"bytes,5,opt,name=correct_answer,json=correctAnswer,proto3" json:"correct_answer,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Question) Reset() {
	*x = Question{}
	mi := &file_exam_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Question) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Question) ProtoMessage() {}

func (x *Question) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Question.ProtoReflect.Descriptor instead.
func (*Question) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{1}
}

func (x *Question) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Question) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

func (x *Question) GetQuestionText() string {
	if x != nil {
		return x.QuestionText
	}
	return ""
}

func (x *Question) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Question) GetCorrectAnswer() string {
	if x != nil {
		return x.CorrectAnswer
	}
	return ""
}

func (x *Question) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Question) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type Exam struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Exam) Reset() {
	*x = Exam{}
	mi := &file_exam_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Exam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Exam) ProtoMessage() {}

func (x *Exam) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Exam.ProtoReflect.Descriptor instead.
func (*Exam) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{2}
}

func (x *Exam) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Exam) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Exam) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Exam) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Exam) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Exam) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Exam) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ExamDetailed struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Tasks         []*Task                `protobuf:"bytes,8,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Questions     []*Question            `protobuf:"bytes,9,rep,name=questions,proto3" json:"questions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamDetailed) Reset() {
	*x = ExamDetailed{}
	mi := &file_exam_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamDetailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamDetailed) ProtoMessage() {}

func (x *ExamDetailed) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamDetailed.ProtoReflect.Descriptor instead.
func (*ExamDetailed) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{3}
}

func (x *ExamDetailed) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExamDetailed) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExamDetailed) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExamDetailed) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ExamDetailed) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ExamDetailed) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ExamDetailed) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ExamDetailed) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *ExamDetailed) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

type CreateTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTaskRequest) Reset() {
	*x = CreateTaskRequest{}
	mi := &file_exam_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskRequest) ProtoMessage() {}

func (x *CreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{4}
}

func (x *CreateTaskRequest) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type GetTaskByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskByIDRequest) Reset() {
	*x = GetTaskByIDRequest{}
	mi := &file_exam_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskByIDRequest) ProtoMessage() {}

func (x *GetTaskByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskByIDRequest.ProtoReflect.Descriptor instead.
func (*GetTaskByIDRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{5}
}

func (x *GetTaskByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTasksByExamIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExamId        string                 `protobuf:"bytes,1,opt,name=exam_id,json=examId,proto3" json:"exam_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTasksByExamIDRequest) Reset() {
	*x = GetTasksByExamIDRequest{}
	mi := &file_exam_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTasksByExamIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksByExamIDRequest) ProtoMessage() {}

func (x *GetTasksByExamIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksByExamIDRequest.ProtoReflect.Descriptor instead.
func (*GetTasksByExamIDRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{6}
}

func (x *GetTasksByExamIDRequest) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

type TasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*Task                `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TasksResponse) Reset() {
	*x = TasksResponse{}
	mi := &file_exam_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TasksResponse) ProtoMessage() {}

func (x *TasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TasksResponse.ProtoReflect.Descriptor instead.
func (*TasksResponse) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{7}
}

func (x *TasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type UpdateTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskRequest) Reset() {
	*x = UpdateTaskRequest{}
	mi := &file_exam_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskRequest) ProtoMessage() {}

func (x *UpdateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTaskRequest) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type DeleteTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTaskRequest) Reset() {
	*x = DeleteTaskRequest{}
	mi := &file_exam_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskRequest) ProtoMessage() {}

func (x *DeleteTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskRequest.ProtoReflect.Descriptor instead.
func (*DeleteTaskRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateQuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Question      *Question              `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateQuestionRequest) Reset() {
	*x = CreateQuestionRequest{}
	mi := &file_exam_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateQuestionRequest) ProtoMessage() {}

func (x *CreateQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateQuestionRequest.ProtoReflect.Descriptor instead.
func (*CreateQuestionRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{10}
}

func (x *CreateQuestionRequest) GetQuestion() *Question {
	if x != nil {
		return x.Question
	}
	return nil
}

type GetQuestionByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQuestionByIDRequest) Reset() {
	*x = GetQuestionByIDRequest{}
	mi := &file_exam_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuestionByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionByIDRequest) ProtoMessage() {}

func (x *GetQuestionByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionByIDRequest.ProtoReflect.Descriptor instead.
func (*GetQuestionByIDRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{11}
}

func (x *GetQuestionByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetQuestionsByExamIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExamId        string                 `protobuf:"bytes,1,opt,name=exam_id,json=examId,proto3" json:"exam_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetQuestionsByExamIDRequest) Reset() {
	*x = GetQuestionsByExamIDRequest{}
	mi := &file_exam_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetQuestionsByExamIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuestionsByExamIDRequest) ProtoMessage() {}

func (x *GetQuestionsByExamIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuestionsByExamIDRequest.ProtoReflect.Descriptor instead.
func (*GetQuestionsByExamIDRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{12}
}

func (x *GetQuestionsByExamIDRequest) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

type QuestionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Questions     []*Question            `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionsResponse) Reset() {
	*x = QuestionsResponse{}
	mi := &file_exam_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionsResponse) ProtoMessage() {}

func (x *QuestionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionsResponse.ProtoReflect.Descriptor instead.
func (*QuestionsResponse) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{13}
}

func (x *QuestionsResponse) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

type UpdateQuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Question      *Question              `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateQuestionRequest) Reset() {
	*x = UpdateQuestionRequest{}
	mi := &file_exam_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuestionRequest) ProtoMessage() {}

func (x *UpdateQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuestionRequest.ProtoReflect.Descriptor instead.
func (*UpdateQuestionRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateQuestionRequest) GetQuestion() *Question {
	if x != nil {
		return x.Question
	}
	return nil
}

type DeleteQuestionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteQuestionRequest) Reset() {
	*x = DeleteQuestionRequest{}
	mi := &file_exam_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteQuestionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteQuestionRequest) ProtoMessage() {}

func (x *DeleteQuestionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteQuestionRequest.ProtoReflect.Descriptor instead.
func (*DeleteQuestionRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteQuestionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateExamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exam          *Exam                  `protobuf:"bytes,1,opt,name=exam,proto3" json:"exam,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateExamRequest) Reset() {
	*x = CreateExamRequest{}
	mi := &file_exam_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateExamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExamRequest) ProtoMessage() {}

func (x *CreateExamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExamRequest.ProtoReflect.Descriptor instead.
func (*CreateExamRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{16}
}

func (x *CreateExamRequest) GetExam() *Exam {
	if x != nil {
		return x.Exam
	}
	return nil
}

type GetExamByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExamByIDRequest) Reset() {
	*x = GetExamByIDRequest{}
	mi := &file_exam_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExamByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExamByIDRequest) ProtoMessage() {}

func (x *GetExamByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExamByIDRequest.ProtoReflect.Descriptor instead.
func (*GetExamByIDRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{17}
}

func (x *GetExamByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetExamsByUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExamsByUserRequest) Reset() {
	*x = GetExamsByUserRequest{}
	mi := &file_exam_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExamsByUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExamsByUserRequest) ProtoMessage() {}

func (x *GetExamsByUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExamsByUserRequest.ProtoReflect.Descriptor instead.
func (*GetExamsByUserRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{18}
}

func (x *GetExamsByUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ExamsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exams         []*Exam                `protobuf:"bytes,1,rep,name=exams,proto3" json:"exams,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamsResponse) Reset() {
	*x = ExamsResponse{}
	mi := &file_exam_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamsResponse) ProtoMessage() {}

func (x *ExamsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamsResponse.ProtoReflect.Descriptor instead.
func (*ExamsResponse) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{19}
}

func (x *ExamsResponse) GetExams() []*Exam {
	if x != nil {
		return x.Exams
	}
	return nil
}

type UpdateExamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exam          *Exam                  `protobuf:"bytes,1,opt,name=exam,proto3" json:"exam,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateExamRequest) Reset() {
	*x = UpdateExamRequest{}
	mi := &file_exam_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExamRequest) ProtoMessage() {}

func (x *UpdateExamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExamRequest.ProtoReflect.Descriptor instead.
func (*UpdateExamRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateExamRequest) GetExam() *Exam {
	if x != nil {
		return x.Exam
	}
	return nil
}

type UpdateExamStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateExamStatusRequest) Reset() {
	*x = UpdateExamStatusRequest{}
	mi := &file_exam_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExamStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExamStatusRequest) ProtoMessage() {}

func (x *UpdateExamStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExamStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateExamStatusRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateExamStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateExamStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DeleteExamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteExamRequest) Reset() {
	*x = DeleteExamRequest{}
	mi := &file_exam_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteExamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExamRequest) ProtoMessage() {}

func (x *DeleteExamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExamRequest.ProtoReflect.Descriptor instead.
func (*DeleteExamRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteExamRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetExamWithDetailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetExamWithDetailsRequest) Reset() {
	*x = GetExamWithDetailsRequest{}
	mi := &file_exam_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExamWithDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExamWithDetailsRequest) ProtoMessage() {}

func (x *GetExamWithDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExamWithDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetExamWithDetailsRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{23}
}

func (x *GetExamWithDetailsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GenerateExamUsingAIRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	NumQuestions  int32                  `protobuf:"varint,2,opt,name=num_questions,json=numQuestions,proto3" json:"num_questions,omitempty"`
	NumTasks      int32                  `protobuf:"varint,3,opt,name=num_tasks,json=numTasks,proto3" json:"num_tasks,omitempty"`
	Topic         string                 `protobuf:"bytes,4,opt,name=topic,proto3" json:"topic,omitempty"`
	Grade         string                 `protobuf:"bytes,5,opt,name=grade,proto3" json:"grade,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenerateExamUsingAIRequest) Reset() {
	*x = GenerateExamUsingAIRequest{}
	mi := &file_exam_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenerateExamUsingAIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateExamUsingAIRequest) ProtoMessage() {}

func (x *GenerateExamUsingAIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateExamUsingAIRequest.ProtoReflect.Descriptor instead.
func (*GenerateExamUsingAIRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{24}
}

func (x *GenerateExamUsingAIRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GenerateExamUsingAIRequest) GetNumQuestions() int32 {
	if x != nil {
		return x.NumQuestions
	}
	return 0
}

func (x *GenerateExamUsingAIRequest) GetNumTasks() int32 {
	if x != nil {
		return x.NumTasks
	}
	return 0
}

func (x *GenerateExamUsingAIRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *GenerateExamUsingAIRequest) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

type TaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExamId        string                 `protobuf:"bytes,2,opt,name=exam_id,json=examId,proto3" json:"exam_id,omitempty"`
	TaskType      string                 `protobuf:"bytes,3,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Score         float32                `protobuf:"fixed32,5,opt,name=score,proto3" json:"score,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResponse) Reset() {
	*x = TaskResponse{}
	mi := &file_exam_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResponse) ProtoMessage() {}

func (x *TaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResponse.ProtoReflect.Descriptor instead.
func (*TaskResponse) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{25}
}

func (x *TaskResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskResponse) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

func (x *TaskResponse) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *TaskResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TaskResponse) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *TaskResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type QuestionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExamId        string                 `protobuf:"bytes,2,opt,name=exam_id,json=examId,proto3" json:"exam_id,omitempty"`
	QuestionText  string                 `protobuf:"bytes,3,opt,name=question_text,json=questionText,proto3" json:"question_text,omitempty"`
	Options       []string               `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
	CorrectAnswer string                 `protobuf:"bytes,5,opt,name=correct_answer,json=correctAnswer,proto3" json:"correct_answer,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionResponse) Reset() {
	*x = QuestionResponse{}
	mi := &file_exam_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionResponse) ProtoMessage() {}

func (x *QuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionResponse.ProtoReflect.Descriptor instead.
func (*QuestionResponse) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{26}
}

func (x *QuestionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QuestionResponse) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

func (x *QuestionResponse) GetQuestionText() string {
	if x != nil {
		return x.QuestionText
	}
	return ""
}

func (x *QuestionResponse) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *QuestionResponse) GetCorrectAnswer() string {
	if x != nil {
		return x.CorrectAnswer
	}
	return ""
}

func (x *QuestionResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *QuestionResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ExamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamResponse) Reset() {
	*x = ExamResponse{}
	mi := &file_exam_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamResponse) ProtoMessage() {}

func (x *ExamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamResponse.ProtoReflect.Descriptor instead.
func (*ExamResponse) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{27}
}

func (x *ExamResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExamResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExamResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExamResponse) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ExamResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ExamResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ExamResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ExamDetailedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Tasks         []*Task                `protobuf:"bytes,8,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Questions     []*Question            `protobuf:"bytes,9,rep,name=questions,proto3" json:"questions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamDetailedResponse) Reset() {
	*x = ExamDetailedResponse{}
	mi := &file_exam_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamDetailedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamDetailedResponse) ProtoMessage() {}

func (x *ExamDetailedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamDetailedResponse.ProtoReflect.Descriptor instead.
func (*ExamDetailedResponse) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{28}
}

func (x *ExamDetailedResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExamDetailedResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExamDetailedResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExamDetailedResponse) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ExamDetailedResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ExamDetailedResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ExamDetailedResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ExamDetailedResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *ExamDetailedResponse) GetQuestions() []*Question {
	if x != nil {
		return x.Questions
	}
	return nil
}

type ExamEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	EventType     ExamEventType          `protobuf:"varint,8,opt,name=event_type,json=eventType,proto3,enum=examservice.ExamEventType" json:"event_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamEvent) Reset() {
	*x = ExamEvent{}
	mi := &file_exam_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamEvent) ProtoMessage() {}

func (x *ExamEvent) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamEvent.ProtoReflect.Descriptor instead.
func (*ExamEvent) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{29}
}

func (x *ExamEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExamEvent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExamEvent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExamEvent) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ExamEvent) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ExamEvent) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ExamEvent) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ExamEvent) GetEventType() ExamEventType {
	if x != nil {
		return x.EventType
	}
	return ExamEventType_EXAM_CREATED
}

var File_exam_proto protoreflect.FileDescriptor

const file_exam_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"exam.proto\x12\vexamservice\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xbf\x01\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aexam_id\x18\x02 \x01(\tR\x06examId\x12\x1b\n" +
	"\ttask_type\x18\x03 \x01(\tR\btaskType\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x14\n" +
	"\x05score\x18\x05 \x01(\x02R\x05score\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\xec\x01\n" +
	"\bQuestion\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aexam_id\x18\x02 \x01(\tR\x06examId\x12#\n" +
	"\rquestion_text\x18\x03 \x01(\tR\fquestionText\x12\x18\n" +
	"\aoptions\x18\x04 \x03(\tR\aoptions\x12%\n" +
	"\x0ecorrect_answer\x18\x05 \x01(\tR\rcorrectAnswer\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\xfb\x01\n" +
	"\x04Exam\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_by\x18\x04 \x01(\tR\tcreatedBy\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xe1\x02\n" +
	"\fExamDetailed\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_by\x18\x04 \x01(\tR\tcreatedBy\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12'\n" +
	"\x05tasks\x18\b \x03(\v2\x11.examservice.TaskR\x05tasks\x123\n" +
	"\tquestions\x18\t \x03(\v2\x15.examservice.QuestionR\tquestions\":\n" +
	"\x11CreateTaskRequest\x12%\n" +
	"\x04task\x18\x01 \x01(\v2\x11.examservice.TaskR\x04task\"$\n" +
	"\x12GetTaskByIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"2\n" +
	"\x17GetTasksByExamIDRequest\x12\x17\n" +
	"\aexam_id\x18\x01 \x01(\tR\x06examId\"8\n" +
	"\rTasksResponse\x12'\n" +
	"\x05tasks\x18\x01 \x03(\v2\x11.examservice.TaskR\x05tasks\":\n" +
	"\x11UpdateTaskRequest\x12%\n" +
	"\x04task\x18\x01 \x01(\v2\x11.examservice.TaskR\x04task\"#\n" +
	"\x11DeleteTaskRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"J\n" +
	"\x15CreateQuestionRequest\x121\n" +
	"\bquestion\x18\x01 \x01(\v2\x15.examservice.QuestionR\bquestion\"(\n" +
	"\x16GetQuestionByIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"6\n" +
	"\x1bGetQuestionsByExamIDRequest\x12\x17\n" +
	"\aexam_id\x18\x01 \x01(\tR\x06examId\"H\n" +
	"\x11QuestionsResponse\x123\n" +
	"\tquestions\x18\x01 \x03(\v2\x15.examservice.QuestionR\tquestions\"J\n" +
	"\x15UpdateQuestionRequest\x121\n" +
	"\bquestion\x18\x01 \x01(\v2\x15.examservice.QuestionR\bquestion\"'\n" +
	"\x15DeleteQuestionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\":\n" +
	"\x11CreateExamRequest\x12%\n" +
	"\x04exam\x18\x01 \x01(\v2\x11.examservice.ExamR\x04exam\"$\n" +
	"\x12GetExamByIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"0\n" +
	"\x15GetExamsByUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"8\n" +
	"\rExamsResponse\x12'\n" +
	"\x05exams\x18\x01 \x03(\v2\x11.examservice.ExamR\x05exams\":\n" +
	"\x11UpdateExamRequest\x12%\n" +
	"\x04exam\x18\x01 \x01(\v2\x11.examservice.ExamR\x04exam\"A\n" +
	"\x17UpdateExamStatusRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"#\n" +
	"\x11DeleteExamRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"+\n" +
	"\x19GetExamWithDetailsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xa3\x01\n" +
	"\x1aGenerateExamUsingAIRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12#\n" +
	"\rnum_questions\x18\x02 \x01(\x05R\fnumQuestions\x12\x1b\n" +
	"\tnum_tasks\x18\x03 \x01(\x05R\bnumTasks\x12\x14\n" +
	"\x05topic\x18\x04 \x01(\tR\x05topic\x12\x14\n" +
	"\x05grade\x18\x05 \x01(\tR\x05grade\"\xc7\x01\n" +
	"\fTaskResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aexam_id\x18\x02 \x01(\tR\x06examId\x12\x1b\n" +
	"\ttask_type\x18\x03 \x01(\tR\btaskType\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x14\n" +
	"\x05score\x18\x05 \x01(\x02R\x05score\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\xf4\x01\n" +
	"\x10QuestionResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aexam_id\x18\x02 \x01(\tR\x06examId\x12#\n" +
	"\rquestion_text\x18\x03 \x01(\tR\fquestionText\x12\x18\n" +
	"\aoptions\x18\x04 \x03(\tR\aoptions\x12%\n" +
	"\x0ecorrect_answer\x18\x05 \x01(\tR\rcorrectAnswer\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\x83\x02\n" +
	"\fExamResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_by\x18\x04 \x01(\tR\tcreatedBy\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xe9\x02\n" +
	"\x14ExamDetailedResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_by\x18\x04 \x01(\tR\tcreatedBy\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12'\n" +
	"\x05tasks\x18\b \x03(\v2\x11.examservice.TaskR\x05tasks\x123\n" +
	"\tquestions\x18\t \x03(\v2\x15.examservice.QuestionR\tquestions\"\xbb\x02\n" +
	"\tExamEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_by\x18\x04 \x01(\tR\tcreatedBy\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x129\n" +
	"\n" +
	"event_type\x18\b \x01(\x0e2\x1a.examservice.ExamEventTypeR\teventType*E\n" +
	"\rExamEventType\x12\x10\n" +
	"\fEXAM_CREATED\x10\x00\x12\x10\n" +
	"\fEXAM_UPDATED\x10\x01\x12\x10\n" +
	"\fEXAM_DELETED\x10\x022\xb0\r\n" +
	"\vExamService\x12I\n" +
	"\n" +
	"CreateTask\x12\x1e.examservice.CreateTaskRequest\x1a\x19.examservice.TaskResponse\"\x00\x12K\n" +
	"\vGetTaskByID\x12\x1f.examservice.GetTaskByIDRequest\x1a\x19.examservice.TaskResponse\"\x00\x12V\n" +
	"\x10GetTasksByExamID\x12$.examservice.GetTasksByExamIDRequest\x1a\x1a.examservice.TasksResponse\"\x00\x12C\n" +
	"\vGetAllTasks\x12\x16.google.protobuf.Empty\x1a\x1a.examservice.TasksResponse\"\x00\x12F\n" +
	"\n" +
	"UpdateTask\x12\x1e.examservice.UpdateTaskRequest\x1a\x16.google.protobuf.Empty\"\x00\x12F\n" +
	"\n" +
	"DeleteTask\x12\x1e.examservice.DeleteTaskRequest\x1a\x16.google.protobuf.Empty\"\x00\x12U\n" +
	"\x0eCreateQuestion\x12\".examservice.CreateQuestionRequest\x1a\x1d.examservice.QuestionResponse\"\x00\x12W\n" +
	"\x0fGetQuestionByID\x12#.examservice.GetQuestionByIDRequest\x1a\x1d.examservice.QuestionResponse\"\x00\x12b\n" +
	"\x14GetQuestionsByExamID\x12(.examservice.GetQuestionsByExamIDRequest\x1a\x1e.examservice.QuestionsResponse\"\x00\x12K\n" +
	"\x0fGetAllQuestions\x12\x16.google.protobuf.Empty\x1a\x1e.examservice.QuestionsResponse\"\x00\x12N\n" +
	"\x0eUpdateQuestion\x12\".examservice.UpdateQuestionRequest\x1a\x16.google.protobuf.Empty\"\x00\x12N\n" +
	"\x0eDeleteQuestion\x12\".examservice.DeleteQuestionRequest\x1a\x16.google.protobuf.Empty\"\x00\x12I\n" +
	"\n" +
	"CreateExam\x12\x1e.examservice.CreateExamRequest\x1a\x19.examservice.ExamResponse\"\x00\x12K\n" +
	"\vGetExamByID\x12\x1f.examservice.GetExamByIDRequest\x1a\x19.examservice.ExamResponse\"\x00\x12R\n" +
	"\x0eGetExamsByUser\x12\".examservice.GetExamsByUserRequest\x1a\x1a.examservice.ExamsResponse\"\x00\x12F\n" +
	"\n" +
	"UpdateExam\x12\x1e.examservice.UpdateExamRequest\x1a\x16.google.protobuf.Empty\"\x00\x12R\n" +
	"\x10UpdateExamStatus\x12$.examservice.UpdateExamStatusRequest\x1a\x16.google.protobuf.Empty\"\x00\x12F\n" +
	"\n" +
	"DeleteExam\x12\x1e.examservice.DeleteExamRequest\x1a\x16.google.protobuf.Empty\"\x00\x12C\n" +
	"\vGetAllExams\x12\x16.google.protobuf.Empty\x1a\x1a.examservice.ExamsResponse\"\x00\x12a\n" +
	"\x12GetExamWithDetails\x12&.examservice.GetExamWithDetailsRequest\x1a!.examservice.ExamDetailedResponse\"\x00\x12c\n" +
	"\x13GenerateExamUsingAI\x12'.examservice.GenerateExamUsingAIRequest\x1a!.examservice.ExamDetailedResponse\"\x00B@Z>github.com/mephirious/helper-for-teachers/services/exam-svc/pbb\x06proto3"

var (
	file_exam_proto_rawDescOnce sync.Once
	file_exam_proto_rawDescData []byte
)

func file_exam_proto_rawDescGZIP() []byte {
	file_exam_proto_rawDescOnce.Do(func() {
		file_exam_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_exam_proto_rawDesc), len(file_exam_proto_rawDesc)))
	})
	return file_exam_proto_rawDescData
}

var file_exam_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_exam_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_exam_proto_goTypes = []any{
	(ExamEventType)(0),                  // 0: examservice.ExamEventType
	(*Task)(nil),                        // 1: examservice.Task
	(*Question)(nil),                    // 2: examservice.Question
	(*Exam)(nil),                        // 3: examservice.Exam
	(*ExamDetailed)(nil),                // 4: examservice.ExamDetailed
	(*CreateTaskRequest)(nil),           // 5: examservice.CreateTaskRequest
	(*GetTaskByIDRequest)(nil),          // 6: examservice.GetTaskByIDRequest
	(*GetTasksByExamIDRequest)(nil),     // 7: examservice.GetTasksByExamIDRequest
	(*TasksResponse)(nil),               // 8: examservice.TasksResponse
	(*UpdateTaskRequest)(nil),           // 9: examservice.UpdateTaskRequest
	(*DeleteTaskRequest)(nil),           // 10: examservice.DeleteTaskRequest
	(*CreateQuestionRequest)(nil),       // 11: examservice.CreateQuestionRequest
	(*GetQuestionByIDRequest)(nil),      // 12: examservice.GetQuestionByIDRequest
	(*GetQuestionsByExamIDRequest)(nil), // 13: examservice.GetQuestionsByExamIDRequest
	(*QuestionsResponse)(nil),           // 14: examservice.QuestionsResponse
	(*UpdateQuestionRequest)(nil),       // 15: examservice.UpdateQuestionRequest
	(*DeleteQuestionRequest)(nil),       // 16: examservice.DeleteQuestionRequest
	(*CreateExamRequest)(nil),           // 17: examservice.CreateExamRequest
	(*GetExamByIDRequest)(nil),          // 18: examservice.GetExamByIDRequest
	(*GetExamsByUserRequest)(nil),       // 19: examservice.GetExamsByUserRequest
	(*ExamsResponse)(nil),               // 20: examservice.ExamsResponse
	(*UpdateExamRequest)(nil),           // 21: examservice.UpdateExamRequest
	(*UpdateExamStatusRequest)(nil),     // 22: examservice.UpdateExamStatusRequest
	(*DeleteExamRequest)(nil),           // 23: examservice.DeleteExamRequest
	(*GetExamWithDetailsRequest)(nil),   // 24: examservice.GetExamWithDetailsRequest
	(*GenerateExamUsingAIRequest)(nil),  // 25: examservice.GenerateExamUsingAIRequest
	(*TaskResponse)(nil),                // 26: examservice.TaskResponse
	(*QuestionResponse)(nil),            // 27: examservice.QuestionResponse
	(*ExamResponse)(nil),                // 28: examservice.ExamResponse
	(*ExamDetailedResponse)(nil),        // 29: examservice.ExamDetailedResponse
	(*ExamEvent)(nil),                   // 30: examservice.ExamEvent
	(*timestamppb.Timestamp)(nil),       // 31: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),               // 32: google.protobuf.Empty
}
var file_exam_proto_depIdxs = []int32{
	31, // 0: examservice.Task.created_at:type_name -> google.protobuf.Timestamp
	31, // 1: examservice.Question.created_at:type_name -> google.protobuf.Timestamp
	31, // 2: examservice.Exam.created_at:type_name -> google.protobuf.Timestamp
	31, // 3: examservice.Exam.updated_at:type_name -> google.protobuf.Timestamp
	31, // 4: examservice.ExamDetailed.created_at:type_name -> google.protobuf.Timestamp
	31, // 5: examservice.ExamDetailed.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 6: examservice.ExamDetailed.tasks:type_name -> examservice.Task
	2,  // 7: examservice.ExamDetailed.questions:type_name -> examservice.Question
	1,  // 8: examservice.CreateTaskRequest.task:type_name -> examservice.Task
	1,  // 9: examservice.TasksResponse.tasks:type_name -> examservice.Task
	1,  // 10: examservice.UpdateTaskRequest.task:type_name -> examservice.Task
	2,  // 11: examservice.CreateQuestionRequest.question:type_name -> examservice.Question
	2,  // 12: examservice.QuestionsResponse.questions:type_name -> examservice.Question
	2,  // 13: examservice.UpdateQuestionRequest.question:type_name -> examservice.Question
	3,  // 14: examservice.CreateExamRequest.exam:type_name -> examservice.Exam
	3,  // 15: examservice.ExamsResponse.exams:type_name -> examservice.Exam
	3,  // 16: examservice.UpdateExamRequest.exam:type_name -> examservice.Exam
	31, // 17: examservice.TaskResponse.created_at:type_name -> google.protobuf.Timestamp
	31, // 18: examservice.QuestionResponse.created_at:type_name -> google.protobuf.Timestamp
	31, // 19: examservice.ExamResponse.created_at:type_name -> google.protobuf.Timestamp
	31, // 20: examservice.ExamResponse.updated_at:type_name -> google.protobuf.Timestamp
	31, // 21: examservice.ExamDetailedResponse.created_at:type_name -> google.protobuf.Timestamp
	31, // 22: examservice.ExamDetailedResponse.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 23: examservice.ExamDetailedResponse.tasks:type_name -> examservice.Task
	2,  // 24: examservice.ExamDetailedResponse.questions:type_name -> examservice.Question
	31, // 25: examservice.ExamEvent.created_at:type_name -> google.protobuf.Timestamp
	31, // 26: examservice.ExamEvent.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 27: examservice.ExamEvent.event_type:type_name -> examservice.ExamEventType
	5,  // 28: examservice.ExamService.CreateTask:input_type -> examservice.CreateTaskRequest
	6,  // 29: examservice.ExamService.GetTaskByID:input_type -> examservice.GetTaskByIDRequest
	7,  // 30: examservice.ExamService.GetTasksByExamID:input_type -> examservice.GetTasksByExamIDRequest
	32, // 31: examservice.ExamService.GetAllTasks:input_type -> google.protobuf.Empty
	9,  // 32: examservice.ExamService.UpdateTask:input_type -> examservice.UpdateTaskRequest
	10, // 33: examservice.ExamService.DeleteTask:input_type -> examservice.DeleteTaskRequest
	11, // 34: examservice.ExamService.CreateQuestion:input_type -> examservice.CreateQuestionRequest
	12, // 35: examservice.ExamService.GetQuestionByID:input_type -> examservice.GetQuestionByIDRequest
	13, // 36: examservice.ExamService.GetQuestionsByExamID:input_type -> examservice.GetQuestionsByExamIDRequest
	32, // 37: examservice.ExamService.GetAllQuestions:input_type -> google.protobuf.Empty
	15, // 38: examservice.ExamService.UpdateQuestion:input_type -> examservice.UpdateQuestionRequest
	16, // 39: examservice.ExamService.DeleteQuestion:input_type -> examservice.DeleteQuestionRequest
	17, // 40: examservice.ExamService.CreateExam:input_type -> examservice.CreateExamRequest
	18, // 41: examservice.ExamService.GetExamByID:input_type -> examservice.GetExamByIDRequest
	19, // 42: examservice.ExamService.GetExamsByUser:input_type -> examservice.GetExamsByUserRequest
	21, // 43: examservice.ExamService.UpdateExam:input_type -> examservice.UpdateExamRequest
	22, // 44: examservice.ExamService.UpdateExamStatus:input_type -> examservice.UpdateExamStatusRequest
	23, // 45: examservice.ExamService.DeleteExam:input_type -> examservice.DeleteExamRequest
	32, // 46: examservice.ExamService.GetAllExams:input_type -> google.protobuf.Empty
	24, // 47: examservice.ExamService.GetExamWithDetails:input_type -> examservice.GetExamWithDetailsRequest
	25, // 48: examservice.ExamService.GenerateExamUsingAI:input_type -> examservice.GenerateExamUsingAIRequest
	26, // 49: examservice.ExamService.CreateTask:output_type -> examservice.TaskResponse
	26, // 50: examservice.ExamService.GetTaskByID:output_type -> examservice.TaskResponse
	8,  // 51: examservice.ExamService.GetTasksByExamID:output_type -> examservice.TasksResponse
	8,  // 52: examservice.ExamService.GetAllTasks:output_type -> examservice.TasksResponse
	32, // 53: examservice.ExamService.UpdateTask:output_type -> google.protobuf.Empty
	32, // 54: examservice.ExamService.DeleteTask:output_type -> google.protobuf.Empty
	27, // 55: examservice.ExamService.CreateQuestion:output_type -> examservice.QuestionResponse
	27, // 56: examservice.ExamService.GetQuestionByID:output_type -> examservice.QuestionResponse
	14, // 57: examservice.ExamService.GetQuestionsByExamID:output_type -> examservice.QuestionsResponse
	14, // 58: examservice.ExamService.GetAllQuestions:output_type -> examservice.QuestionsResponse
	32, // 59: examservice.ExamService.UpdateQuestion:output_type -> google.protobuf.Empty
	32, // 60: examservice.ExamService.DeleteQuestion:output_type -> google.protobuf.Empty
	28, // 61: examservice.ExamService.CreateExam:output_type -> examservice.ExamResponse
	28, // 62: examservice.ExamService.GetExamByID:output_type -> examservice.ExamResponse
	20, // 63: examservice.ExamService.GetExamsByUser:output_type -> examservice.ExamsResponse
	32, // 64: examservice.ExamService.UpdateExam:output_type -> google.protobuf.Empty
	32, // 65: examservice.ExamService.UpdateExamStatus:output_type -> google.protobuf.Empty
	32, // 66: examservice.ExamService.DeleteExam:output_type -> google.protobuf.Empty
	20, // 67: examservice.ExamService.GetAllExams:output_type -> examservice.ExamsResponse
	29, // 68: examservice.ExamService.GetExamWithDetails:output_type -> examservice.ExamDetailedResponse
	29, // 69: examservice.ExamService.GenerateExamUsingAI:output_type -> examservice.ExamDetailedResponse
	49, // [49:70] is the sub-list for method output_type
	28, // [28:49] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_exam_proto_init() }
func file_exam_proto_init() {
	if File_exam_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_exam_proto_rawDesc), len(file_exam_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_exam_proto_goTypes,
		DependencyIndexes: file_exam_proto_depIdxs,
		EnumInfos:         file_exam_proto_enumTypes,
		MessageInfos:      file_exam_proto_msgTypes,
	}.Build()
	File_exam_proto = out.File
	file_exam_proto_goTypes = nil
	file_exam_proto_depIdxs = nil
}
