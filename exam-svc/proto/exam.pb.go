// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: exam.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExamEventType int32

const (
	ExamEventType_CREATED ExamEventType = 0
	ExamEventType_UPDATED ExamEventType = 1
	ExamEventType_DELETED ExamEventType = 2
)

// Enum value maps for ExamEventType.
var (
	ExamEventType_name = map[int32]string{
		0: "CREATED",
		1: "UPDATED",
		2: "DELETED",
	}
	ExamEventType_value = map[string]int32{
		"CREATED": 0,
		"UPDATED": 1,
		"DELETED": 2,
	}
)

func (x ExamEventType) Enum() *ExamEventType {
	p := new(ExamEventType)
	*p = x
	return p
}

func (x ExamEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExamEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_exam_proto_enumTypes[0].Descriptor()
}

func (ExamEventType) Type() protoreflect.EnumType {
	return &file_exam_proto_enumTypes[0]
}

func (x ExamEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExamEventType.Descriptor instead.
func (ExamEventType) EnumDescriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{0}
}

type ExamEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	EventType     ExamEventType          `protobuf:"varint,8,opt,name=event_type,json=eventType,proto3,enum=exam.ExamEventType" json:"event_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamEvent) Reset() {
	*x = ExamEvent{}
	mi := &file_exam_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamEvent) ProtoMessage() {}

func (x *ExamEvent) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamEvent.ProtoReflect.Descriptor instead.
func (*ExamEvent) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{0}
}

func (x *ExamEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExamEvent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExamEvent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExamEvent) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ExamEvent) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ExamEvent) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ExamEvent) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ExamEvent) GetEventType() ExamEventType {
	if x != nil {
		return x.EventType
	}
	return ExamEventType_CREATED
}

type ExamCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamCreate) Reset() {
	*x = ExamCreate{}
	mi := &file_exam_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamCreate) ProtoMessage() {}

func (x *ExamCreate) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamCreate.ProtoReflect.Descriptor instead.
func (*ExamCreate) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{1}
}

func (x *ExamCreate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExamCreate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExamCreate) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ExamCreate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ExamUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         *string                `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title,omitempty"`
	Description   *string                `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	CreatedBy     *string                `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3,oneof" json:"created_by,omitempty"`
	Status        *string                `protobuf:"bytes,5,opt,name=status,proto3,oneof" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamUpdate) Reset() {
	*x = ExamUpdate{}
	mi := &file_exam_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamUpdate) ProtoMessage() {}

func (x *ExamUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamUpdate.ProtoReflect.Descriptor instead.
func (*ExamUpdate) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{2}
}

func (x *ExamUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExamUpdate) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *ExamUpdate) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ExamUpdate) GetCreatedBy() string {
	if x != nil && x.CreatedBy != nil {
		return *x.CreatedBy
	}
	return ""
}

func (x *ExamUpdate) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type ExamPatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        *string                `protobuf:"bytes,2,opt,name=status,proto3,oneof" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamPatch) Reset() {
	*x = ExamPatch{}
	mi := &file_exam_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamPatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamPatch) ProtoMessage() {}

func (x *ExamPatch) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamPatch.ProtoReflect.Descriptor instead.
func (*ExamPatch) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{3}
}

func (x *ExamPatch) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExamPatch) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type ExamCreateAI struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Grade         string                 `protobuf:"bytes,1,opt,name=grade,proto3" json:"grade,omitempty"`
	Topic         string                 `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamCreateAI) Reset() {
	*x = ExamCreateAI{}
	mi := &file_exam_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamCreateAI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamCreateAI) ProtoMessage() {}

func (x *ExamCreateAI) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamCreateAI.ProtoReflect.Descriptor instead.
func (*ExamCreateAI) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{4}
}

func (x *ExamCreateAI) GetGrade() string {
	if x != nil {
		return x.Grade
	}
	return ""
}

func (x *ExamCreateAI) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

type ExamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamResponse) Reset() {
	*x = ExamResponse{}
	mi := &file_exam_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamResponse) ProtoMessage() {}

func (x *ExamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamResponse.ProtoReflect.Descriptor instead.
func (*ExamResponse) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{5}
}

func (x *ExamResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExamResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ExamResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExamResponse) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *ExamResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ExamResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ExamResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ExamID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamID) Reset() {
	*x = ExamID{}
	mi := &file_exam_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamID) ProtoMessage() {}

func (x *ExamID) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamID.ProtoReflect.Descriptor instead.
func (*ExamID) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{6}
}

func (x *ExamID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ExamList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Exams         []*ExamResponse        `protobuf:"bytes,1,rep,name=exams,proto3" json:"exams,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExamList) Reset() {
	*x = ExamList{}
	mi := &file_exam_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExamList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExamList) ProtoMessage() {}

func (x *ExamList) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExamList.ProtoReflect.Descriptor instead.
func (*ExamList) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{7}
}

func (x *ExamList) GetExams() []*ExamResponse {
	if x != nil {
		return x.Exams
	}
	return nil
}

type QuestionCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExamId        string                 `protobuf:"bytes,1,opt,name=exam_id,json=examId,proto3" json:"exam_id,omitempty"`
	QuestionText  string                 `protobuf:"bytes,2,opt,name=question_text,json=questionText,proto3" json:"question_text,omitempty"`
	Options       []string               `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty"`
	CorrectAnswer string                 `protobuf:"bytes,4,opt,name=correct_answer,json=correctAnswer,proto3" json:"correct_answer,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionCreate) Reset() {
	*x = QuestionCreate{}
	mi := &file_exam_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionCreate) ProtoMessage() {}

func (x *QuestionCreate) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionCreate.ProtoReflect.Descriptor instead.
func (*QuestionCreate) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{8}
}

func (x *QuestionCreate) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

func (x *QuestionCreate) GetQuestionText() string {
	if x != nil {
		return x.QuestionText
	}
	return ""
}

func (x *QuestionCreate) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *QuestionCreate) GetCorrectAnswer() string {
	if x != nil {
		return x.CorrectAnswer
	}
	return ""
}

func (x *QuestionCreate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type QuestionUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExamId        *string                `protobuf:"bytes,2,opt,name=exam_id,json=examId,proto3,oneof" json:"exam_id,omitempty"`
	QuestionText  *string                `protobuf:"bytes,3,opt,name=question_text,json=questionText,proto3,oneof" json:"question_text,omitempty"`
	Options       []string               `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
	CorrectAnswer *string                `protobuf:"bytes,5,opt,name=correct_answer,json=correctAnswer,proto3,oneof" json:"correct_answer,omitempty"`
	Status        *string                `protobuf:"bytes,6,opt,name=status,proto3,oneof" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionUpdate) Reset() {
	*x = QuestionUpdate{}
	mi := &file_exam_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionUpdate) ProtoMessage() {}

func (x *QuestionUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionUpdate.ProtoReflect.Descriptor instead.
func (*QuestionUpdate) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{9}
}

func (x *QuestionUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QuestionUpdate) GetExamId() string {
	if x != nil && x.ExamId != nil {
		return *x.ExamId
	}
	return ""
}

func (x *QuestionUpdate) GetQuestionText() string {
	if x != nil && x.QuestionText != nil {
		return *x.QuestionText
	}
	return ""
}

func (x *QuestionUpdate) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *QuestionUpdate) GetCorrectAnswer() string {
	if x != nil && x.CorrectAnswer != nil {
		return *x.CorrectAnswer
	}
	return ""
}

func (x *QuestionUpdate) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type QuestionPatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status        *string                `protobuf:"bytes,2,opt,name=status,proto3,oneof" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionPatch) Reset() {
	*x = QuestionPatch{}
	mi := &file_exam_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionPatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionPatch) ProtoMessage() {}

func (x *QuestionPatch) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionPatch.ProtoReflect.Descriptor instead.
func (*QuestionPatch) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{10}
}

func (x *QuestionPatch) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QuestionPatch) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type QuestionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExamId        string                 `protobuf:"bytes,2,opt,name=exam_id,json=examId,proto3" json:"exam_id,omitempty"`
	QuestionText  string                 `protobuf:"bytes,3,opt,name=question_text,json=questionText,proto3" json:"question_text,omitempty"`
	Options       []string               `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
	CorrectAnswer string                 `protobuf:"bytes,5,opt,name=correct_answer,json=correctAnswer,proto3" json:"correct_answer,omitempty"`
	Status        string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionResponse) Reset() {
	*x = QuestionResponse{}
	mi := &file_exam_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionResponse) ProtoMessage() {}

func (x *QuestionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionResponse.ProtoReflect.Descriptor instead.
func (*QuestionResponse) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{11}
}

func (x *QuestionResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QuestionResponse) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

func (x *QuestionResponse) GetQuestionText() string {
	if x != nil {
		return x.QuestionText
	}
	return ""
}

func (x *QuestionResponse) GetOptions() []string {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *QuestionResponse) GetCorrectAnswer() string {
	if x != nil {
		return x.CorrectAnswer
	}
	return ""
}

func (x *QuestionResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *QuestionResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type QuestionID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionID) Reset() {
	*x = QuestionID{}
	mi := &file_exam_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionID) ProtoMessage() {}

func (x *QuestionID) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionID.ProtoReflect.Descriptor instead.
func (*QuestionID) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{12}
}

func (x *QuestionID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type QuestionList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Questions     []*QuestionResponse    `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QuestionList) Reset() {
	*x = QuestionList{}
	mi := &file_exam_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionList) ProtoMessage() {}

func (x *QuestionList) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionList.ProtoReflect.Descriptor instead.
func (*QuestionList) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{13}
}

func (x *QuestionList) GetQuestions() []*QuestionResponse {
	if x != nil {
		return x.Questions
	}
	return nil
}

type TaskCreate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExamId        string                 `protobuf:"bytes,1,opt,name=exam_id,json=examId,proto3" json:"exam_id,omitempty"`
	TaskType      string                 `protobuf:"bytes,2,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Score         float32                `protobuf:"fixed32,4,opt,name=score,proto3" json:"score,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskCreate) Reset() {
	*x = TaskCreate{}
	mi := &file_exam_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCreate) ProtoMessage() {}

func (x *TaskCreate) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCreate.ProtoReflect.Descriptor instead.
func (*TaskCreate) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{14}
}

func (x *TaskCreate) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

func (x *TaskCreate) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *TaskCreate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TaskCreate) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type TaskUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExamId        *string                `protobuf:"bytes,2,opt,name=exam_id,json=examId,proto3,oneof" json:"exam_id,omitempty"`
	TaskType      *string                `protobuf:"bytes,3,opt,name=task_type,json=taskType,proto3,oneof" json:"task_type,omitempty"`
	Description   *string                `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Score         *float32               `protobuf:"fixed32,5,opt,name=score,proto3,oneof" json:"score,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskUpdate) Reset() {
	*x = TaskUpdate{}
	mi := &file_exam_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskUpdate) ProtoMessage() {}

func (x *TaskUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskUpdate.ProtoReflect.Descriptor instead.
func (*TaskUpdate) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{15}
}

func (x *TaskUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskUpdate) GetExamId() string {
	if x != nil && x.ExamId != nil {
		return *x.ExamId
	}
	return ""
}

func (x *TaskUpdate) GetTaskType() string {
	if x != nil && x.TaskType != nil {
		return *x.TaskType
	}
	return ""
}

func (x *TaskUpdate) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *TaskUpdate) GetScore() float32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

type TaskPatch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Score         *float32               `protobuf:"fixed32,2,opt,name=score,proto3,oneof" json:"score,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskPatch) Reset() {
	*x = TaskPatch{}
	mi := &file_exam_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskPatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskPatch) ProtoMessage() {}

func (x *TaskPatch) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskPatch.ProtoReflect.Descriptor instead.
func (*TaskPatch) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{16}
}

func (x *TaskPatch) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskPatch) GetScore() float32 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

type TaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExamId        string                 `protobuf:"bytes,2,opt,name=exam_id,json=examId,proto3" json:"exam_id,omitempty"`
	TaskType      string                 `protobuf:"bytes,3,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Score         float32                `protobuf:"fixed32,5,opt,name=score,proto3" json:"score,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskResponse) Reset() {
	*x = TaskResponse{}
	mi := &file_exam_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResponse) ProtoMessage() {}

func (x *TaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResponse.ProtoReflect.Descriptor instead.
func (*TaskResponse) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{17}
}

func (x *TaskResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskResponse) GetExamId() string {
	if x != nil {
		return x.ExamId
	}
	return ""
}

func (x *TaskResponse) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *TaskResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TaskResponse) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *TaskResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type TaskID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskID) Reset() {
	*x = TaskID{}
	mi := &file_exam_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskID) ProtoMessage() {}

func (x *TaskID) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskID.ProtoReflect.Descriptor instead.
func (*TaskID) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{18}
}

func (x *TaskID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TaskList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*TaskResponse        `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskList) Reset() {
	*x = TaskList{}
	mi := &file_exam_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskList) ProtoMessage() {}

func (x *TaskList) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskList.ProtoReflect.Descriptor instead.
func (*TaskList) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{19}
}

func (x *TaskList) GetTasks() []*TaskResponse {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type CacheTriggerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityId      string                 `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	EntityType    string                 `protobuf:"bytes,2,opt,name=entity_type,json=entityType,proto3" json:"entity_type,omitempty"` // "exam", "question", "task"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CacheTriggerRequest) Reset() {
	*x = CacheTriggerRequest{}
	mi := &file_exam_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CacheTriggerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheTriggerRequest) ProtoMessage() {}

func (x *CacheTriggerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheTriggerRequest.ProtoReflect.Descriptor instead.
func (*CacheTriggerRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{20}
}

func (x *CacheTriggerRequest) GetEntityId() string {
	if x != nil {
		return x.EntityId
	}
	return ""
}

func (x *CacheTriggerRequest) GetEntityType() string {
	if x != nil {
		return x.EntityType
	}
	return ""
}

type MailRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	To            string                 `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Subject       string                 `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Body          string                 `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MailRequest) Reset() {
	*x = MailRequest{}
	mi := &file_exam_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MailRequest) ProtoMessage() {}

func (x *MailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_exam_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MailRequest.ProtoReflect.Descriptor instead.
func (*MailRequest) Descriptor() ([]byte, []int) {
	return file_exam_proto_rawDescGZIP(), []int{21}
}

func (x *MailRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *MailRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *MailRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

var File_exam_proto protoreflect.FileDescriptor

const file_exam_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"exam.proto\x12\x04exam\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb4\x02\n" +
	"\tExamEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_by\x18\x04 \x01(\tR\tcreatedBy\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x122\n" +
	"\n" +
	"event_type\x18\b \x01(\x0e2\x13.exam.ExamEventTypeR\teventType\"{\n" +
	"\n" +
	"ExamCreate\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_by\x18\x03 \x01(\tR\tcreatedBy\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\"\xd3\x01\n" +
	"\n" +
	"ExamUpdate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\x05title\x18\x02 \x01(\tH\x00R\x05title\x88\x01\x01\x12%\n" +
	"\vdescription\x18\x03 \x01(\tH\x01R\vdescription\x88\x01\x01\x12\"\n" +
	"\n" +
	"created_by\x18\x04 \x01(\tH\x02R\tcreatedBy\x88\x01\x01\x12\x1b\n" +
	"\x06status\x18\x05 \x01(\tH\x03R\x06status\x88\x01\x01B\b\n" +
	"\x06_titleB\x0e\n" +
	"\f_descriptionB\r\n" +
	"\v_created_byB\t\n" +
	"\a_status\"C\n" +
	"\tExamPatch\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\x06status\x18\x02 \x01(\tH\x00R\x06status\x88\x01\x01B\t\n" +
	"\a_status\":\n" +
	"\fExamCreateAI\x12\x14\n" +
	"\x05grade\x18\x01 \x01(\tR\x05grade\x12\x14\n" +
	"\x05topic\x18\x02 \x01(\tR\x05topic\"\x83\x02\n" +
	"\fExamResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"created_by\x18\x04 \x01(\tR\tcreatedBy\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\x18\n" +
	"\x06ExamID\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"4\n" +
	"\bExamList\x12(\n" +
	"\x05exams\x18\x01 \x03(\v2\x12.exam.ExamResponseR\x05exams\"\xa7\x01\n" +
	"\x0eQuestionCreate\x12\x17\n" +
	"\aexam_id\x18\x01 \x01(\tR\x06examId\x12#\n" +
	"\rquestion_text\x18\x02 \x01(\tR\fquestionText\x12\x18\n" +
	"\aoptions\x18\x03 \x03(\tR\aoptions\x12%\n" +
	"\x0ecorrect_answer\x18\x04 \x01(\tR\rcorrectAnswer\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\"\x87\x02\n" +
	"\x0eQuestionUpdate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1c\n" +
	"\aexam_id\x18\x02 \x01(\tH\x00R\x06examId\x88\x01\x01\x12(\n" +
	"\rquestion_text\x18\x03 \x01(\tH\x01R\fquestionText\x88\x01\x01\x12\x18\n" +
	"\aoptions\x18\x04 \x03(\tR\aoptions\x12*\n" +
	"\x0ecorrect_answer\x18\x05 \x01(\tH\x02R\rcorrectAnswer\x88\x01\x01\x12\x1b\n" +
	"\x06status\x18\x06 \x01(\tH\x03R\x06status\x88\x01\x01B\n" +
	"\n" +
	"\b_exam_idB\x10\n" +
	"\x0e_question_textB\x11\n" +
	"\x0f_correct_answerB\t\n" +
	"\a_status\"G\n" +
	"\rQuestionPatch\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\x06status\x18\x02 \x01(\tH\x00R\x06status\x88\x01\x01B\t\n" +
	"\a_status\"\xf4\x01\n" +
	"\x10QuestionResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aexam_id\x18\x02 \x01(\tR\x06examId\x12#\n" +
	"\rquestion_text\x18\x03 \x01(\tR\fquestionText\x12\x18\n" +
	"\aoptions\x18\x04 \x03(\tR\aoptions\x12%\n" +
	"\x0ecorrect_answer\x18\x05 \x01(\tR\rcorrectAnswer\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\x1c\n" +
	"\n" +
	"QuestionID\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"D\n" +
	"\fQuestionList\x124\n" +
	"\tquestions\x18\x01 \x03(\v2\x16.exam.QuestionResponseR\tquestions\"z\n" +
	"\n" +
	"TaskCreate\x12\x17\n" +
	"\aexam_id\x18\x01 \x01(\tR\x06examId\x12\x1b\n" +
	"\ttask_type\x18\x02 \x01(\tR\btaskType\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x14\n" +
	"\x05score\x18\x04 \x01(\x02R\x05score\"\xd2\x01\n" +
	"\n" +
	"TaskUpdate\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1c\n" +
	"\aexam_id\x18\x02 \x01(\tH\x00R\x06examId\x88\x01\x01\x12 \n" +
	"\ttask_type\x18\x03 \x01(\tH\x01R\btaskType\x88\x01\x01\x12%\n" +
	"\vdescription\x18\x04 \x01(\tH\x02R\vdescription\x88\x01\x01\x12\x19\n" +
	"\x05score\x18\x05 \x01(\x02H\x03R\x05score\x88\x01\x01B\n" +
	"\n" +
	"\b_exam_idB\f\n" +
	"\n" +
	"_task_typeB\x0e\n" +
	"\f_descriptionB\b\n" +
	"\x06_score\"@\n" +
	"\tTaskPatch\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\x05score\x18\x02 \x01(\x02H\x00R\x05score\x88\x01\x01B\b\n" +
	"\x06_score\"\xc7\x01\n" +
	"\fTaskResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\aexam_id\x18\x02 \x01(\tR\x06examId\x12\x1b\n" +
	"\ttask_type\x18\x03 \x01(\tR\btaskType\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x14\n" +
	"\x05score\x18\x05 \x01(\x02R\x05score\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\x18\n" +
	"\x06TaskID\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"4\n" +
	"\bTaskList\x12(\n" +
	"\x05tasks\x18\x01 \x03(\v2\x12.exam.TaskResponseR\x05tasks\"S\n" +
	"\x13CacheTriggerRequest\x12\x1b\n" +
	"\tentity_id\x18\x01 \x01(\tR\bentityId\x12\x1f\n" +
	"\ventity_type\x18\x02 \x01(\tR\n" +
	"entityType\"K\n" +
	"\vMailRequest\x12\x0e\n" +
	"\x02to\x18\x01 \x01(\tR\x02to\x12\x18\n" +
	"\asubject\x18\x02 \x01(\tR\asubject\x12\x12\n" +
	"\x04body\x18\x03 \x01(\tR\x04body*6\n" +
	"\rExamEventType\x12\v\n" +
	"\aCREATED\x10\x00\x12\v\n" +
	"\aUPDATED\x10\x01\x12\v\n" +
	"\aDELETED\x10\x022\xff\t\n" +
	"\vExamService\x122\n" +
	"\n" +
	"CreateExam\x12\x10.exam.ExamCreate\x1a\x12.exam.ExamResponse\x12/\n" +
	"\vGetExamByID\x12\f.exam.ExamID\x1a\x12.exam.ExamResponse\x125\n" +
	"\vGetAllExams\x12\x16.google.protobuf.Empty\x1a\x0e.exam.ExamList\x122\n" +
	"\n" +
	"UpdateExam\x12\x10.exam.ExamUpdate\x1a\x12.exam.ExamResponse\x120\n" +
	"\tPatchExam\x12\x0f.exam.ExamPatch\x1a\x12.exam.ExamResponse\x122\n" +
	"\n" +
	"DeleteExam\x12\f.exam.ExamID\x1a\x16.google.protobuf.Empty\x128\n" +
	"\x0eGenerateExamAI\x12\x12.exam.ExamCreateAI\x1a\x12.exam.ExamResponse\x12>\n" +
	"\x0eCreateQuestion\x12\x14.exam.QuestionCreate\x1a\x16.exam.QuestionResponse\x12;\n" +
	"\x0fGetQuestionByID\x12\x10.exam.QuestionID\x1a\x16.exam.QuestionResponse\x12=\n" +
	"\x0fGetAllQuestions\x12\x16.google.protobuf.Empty\x1a\x12.exam.QuestionList\x12>\n" +
	"\x0eUpdateQuestion\x12\x14.exam.QuestionUpdate\x1a\x16.exam.QuestionResponse\x12<\n" +
	"\rPatchQuestion\x12\x13.exam.QuestionPatch\x1a\x16.exam.QuestionResponse\x12:\n" +
	"\x0eDeleteQuestion\x12\x10.exam.QuestionID\x1a\x16.google.protobuf.Empty\x122\n" +
	"\n" +
	"CreateTask\x12\x10.exam.TaskCreate\x1a\x12.exam.TaskResponse\x12/\n" +
	"\vGetTaskByID\x12\f.exam.TaskID\x1a\x12.exam.TaskResponse\x125\n" +
	"\vGetAllTasks\x12\x16.google.protobuf.Empty\x1a\x0e.exam.TaskList\x122\n" +
	"\n" +
	"UpdateTask\x12\x10.exam.TaskUpdate\x1a\x12.exam.TaskResponse\x120\n" +
	"\tPatchTask\x12\x0f.exam.TaskPatch\x1a\x12.exam.TaskResponse\x122\n" +
	"\n" +
	"DeleteTask\x12\f.exam.TaskID\x1a\x16.google.protobuf.Empty\x12F\n" +
	"\x11TriggerRedisCache\x12\x19.exam.CacheTriggerRequest\x1a\x16.google.protobuf.Empty\x12I\n" +
	"\x14TriggerInMemoryCache\x12\x19.exam.CacheTriggerRequest\x1a\x16.google.protobuf.Empty\x12A\n" +
	"\x14SendMailNotification\x12\x11.exam.MailRequest\x1a\x16.google.protobuf.EmptyBYZWgithub.com/mephirious/helper-for-teachers/services/exam-svc/internal/handler/grpc/pb;pbb\x06proto3"

var (
	file_exam_proto_rawDescOnce sync.Once
	file_exam_proto_rawDescData []byte
)

func file_exam_proto_rawDescGZIP() []byte {
	file_exam_proto_rawDescOnce.Do(func() {
		file_exam_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_exam_proto_rawDesc), len(file_exam_proto_rawDesc)))
	})
	return file_exam_proto_rawDescData
}

var file_exam_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_exam_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_exam_proto_goTypes = []any{
	(ExamEventType)(0),            // 0: exam.ExamEventType
	(*ExamEvent)(nil),             // 1: exam.ExamEvent
	(*ExamCreate)(nil),            // 2: exam.ExamCreate
	(*ExamUpdate)(nil),            // 3: exam.ExamUpdate
	(*ExamPatch)(nil),             // 4: exam.ExamPatch
	(*ExamCreateAI)(nil),          // 5: exam.ExamCreateAI
	(*ExamResponse)(nil),          // 6: exam.ExamResponse
	(*ExamID)(nil),                // 7: exam.ExamID
	(*ExamList)(nil),              // 8: exam.ExamList
	(*QuestionCreate)(nil),        // 9: exam.QuestionCreate
	(*QuestionUpdate)(nil),        // 10: exam.QuestionUpdate
	(*QuestionPatch)(nil),         // 11: exam.QuestionPatch
	(*QuestionResponse)(nil),      // 12: exam.QuestionResponse
	(*QuestionID)(nil),            // 13: exam.QuestionID
	(*QuestionList)(nil),          // 14: exam.QuestionList
	(*TaskCreate)(nil),            // 15: exam.TaskCreate
	(*TaskUpdate)(nil),            // 16: exam.TaskUpdate
	(*TaskPatch)(nil),             // 17: exam.TaskPatch
	(*TaskResponse)(nil),          // 18: exam.TaskResponse
	(*TaskID)(nil),                // 19: exam.TaskID
	(*TaskList)(nil),              // 20: exam.TaskList
	(*CacheTriggerRequest)(nil),   // 21: exam.CacheTriggerRequest
	(*MailRequest)(nil),           // 22: exam.MailRequest
	(*timestamppb.Timestamp)(nil), // 23: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 24: google.protobuf.Empty
}
var file_exam_proto_depIdxs = []int32{
	23, // 0: exam.ExamEvent.created_at:type_name -> google.protobuf.Timestamp
	23, // 1: exam.ExamEvent.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: exam.ExamEvent.event_type:type_name -> exam.ExamEventType
	23, // 3: exam.ExamResponse.created_at:type_name -> google.protobuf.Timestamp
	23, // 4: exam.ExamResponse.updated_at:type_name -> google.protobuf.Timestamp
	6,  // 5: exam.ExamList.exams:type_name -> exam.ExamResponse
	23, // 6: exam.QuestionResponse.created_at:type_name -> google.protobuf.Timestamp
	12, // 7: exam.QuestionList.questions:type_name -> exam.QuestionResponse
	23, // 8: exam.TaskResponse.created_at:type_name -> google.protobuf.Timestamp
	18, // 9: exam.TaskList.tasks:type_name -> exam.TaskResponse
	2,  // 10: exam.ExamService.CreateExam:input_type -> exam.ExamCreate
	7,  // 11: exam.ExamService.GetExamByID:input_type -> exam.ExamID
	24, // 12: exam.ExamService.GetAllExams:input_type -> google.protobuf.Empty
	3,  // 13: exam.ExamService.UpdateExam:input_type -> exam.ExamUpdate
	4,  // 14: exam.ExamService.PatchExam:input_type -> exam.ExamPatch
	7,  // 15: exam.ExamService.DeleteExam:input_type -> exam.ExamID
	5,  // 16: exam.ExamService.GenerateExamAI:input_type -> exam.ExamCreateAI
	9,  // 17: exam.ExamService.CreateQuestion:input_type -> exam.QuestionCreate
	13, // 18: exam.ExamService.GetQuestionByID:input_type -> exam.QuestionID
	24, // 19: exam.ExamService.GetAllQuestions:input_type -> google.protobuf.Empty
	10, // 20: exam.ExamService.UpdateQuestion:input_type -> exam.QuestionUpdate
	11, // 21: exam.ExamService.PatchQuestion:input_type -> exam.QuestionPatch
	13, // 22: exam.ExamService.DeleteQuestion:input_type -> exam.QuestionID
	15, // 23: exam.ExamService.CreateTask:input_type -> exam.TaskCreate
	19, // 24: exam.ExamService.GetTaskByID:input_type -> exam.TaskID
	24, // 25: exam.ExamService.GetAllTasks:input_type -> google.protobuf.Empty
	16, // 26: exam.ExamService.UpdateTask:input_type -> exam.TaskUpdate
	17, // 27: exam.ExamService.PatchTask:input_type -> exam.TaskPatch
	19, // 28: exam.ExamService.DeleteTask:input_type -> exam.TaskID
	21, // 29: exam.ExamService.TriggerRedisCache:input_type -> exam.CacheTriggerRequest
	21, // 30: exam.ExamService.TriggerInMemoryCache:input_type -> exam.CacheTriggerRequest
	22, // 31: exam.ExamService.SendMailNotification:input_type -> exam.MailRequest
	6,  // 32: exam.ExamService.CreateExam:output_type -> exam.ExamResponse
	6,  // 33: exam.ExamService.GetExamByID:output_type -> exam.ExamResponse
	8,  // 34: exam.ExamService.GetAllExams:output_type -> exam.ExamList
	6,  // 35: exam.ExamService.UpdateExam:output_type -> exam.ExamResponse
	6,  // 36: exam.ExamService.PatchExam:output_type -> exam.ExamResponse
	24, // 37: exam.ExamService.DeleteExam:output_type -> google.protobuf.Empty
	6,  // 38: exam.ExamService.GenerateExamAI:output_type -> exam.ExamResponse
	12, // 39: exam.ExamService.CreateQuestion:output_type -> exam.QuestionResponse
	12, // 40: exam.ExamService.GetQuestionByID:output_type -> exam.QuestionResponse
	14, // 41: exam.ExamService.GetAllQuestions:output_type -> exam.QuestionList
	12, // 42: exam.ExamService.UpdateQuestion:output_type -> exam.QuestionResponse
	12, // 43: exam.ExamService.PatchQuestion:output_type -> exam.QuestionResponse
	24, // 44: exam.ExamService.DeleteQuestion:output_type -> google.protobuf.Empty
	18, // 45: exam.ExamService.CreateTask:output_type -> exam.TaskResponse
	18, // 46: exam.ExamService.GetTaskByID:output_type -> exam.TaskResponse
	20, // 47: exam.ExamService.GetAllTasks:output_type -> exam.TaskList
	18, // 48: exam.ExamService.UpdateTask:output_type -> exam.TaskResponse
	18, // 49: exam.ExamService.PatchTask:output_type -> exam.TaskResponse
	24, // 50: exam.ExamService.DeleteTask:output_type -> google.protobuf.Empty
	24, // 51: exam.ExamService.TriggerRedisCache:output_type -> google.protobuf.Empty
	24, // 52: exam.ExamService.TriggerInMemoryCache:output_type -> google.protobuf.Empty
	24, // 53: exam.ExamService.SendMailNotification:output_type -> google.protobuf.Empty
	32, // [32:54] is the sub-list for method output_type
	10, // [10:32] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_exam_proto_init() }
func file_exam_proto_init() {
	if File_exam_proto != nil {
		return
	}
	file_exam_proto_msgTypes[2].OneofWrappers = []any{}
	file_exam_proto_msgTypes[3].OneofWrappers = []any{}
	file_exam_proto_msgTypes[9].OneofWrappers = []any{}
	file_exam_proto_msgTypes[10].OneofWrappers = []any{}
	file_exam_proto_msgTypes[15].OneofWrappers = []any{}
	file_exam_proto_msgTypes[16].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_exam_proto_rawDesc), len(file_exam_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_exam_proto_goTypes,
		DependencyIndexes: file_exam_proto_depIdxs,
		EnumInfos:         file_exam_proto_enumTypes,
		MessageInfos:      file_exam_proto_msgTypes,
	}.Build()
	File_exam_proto = out.File
	file_exam_proto_goTypes = nil
	file_exam_proto_depIdxs = nil
}
